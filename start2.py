import MetaTrader5 as mt
import pandas as pd
from datetime import datetime
import os
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
folder_dir = os.getenv('DIR')
login = int(os.getenv('LOGIN'))
pwd = os.getenv('PWD')
server = os.getenv('SERVER')
symbol = os.getenv('SYMBOL')
path = "C:/Program Files/" + folder_dir +"/terminal64.exe"

def save_historical_data_to_csv(symbol, timeframe, timeframe_name, num_candles=1000):
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô CSV
    
    Parameters:
    - symbol: ‡∏Ñ‡∏π‡πà‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô (‡πÄ‡∏ä‡πà‡∏ô EURUSD)
    - timeframe: ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ (M1, M5, H1, etc.)
    - timeframe_name: ‡∏ä‡∏∑‡πà‡∏≠ timeframe ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    - num_candles: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á (default=1000)
    """
    
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
    rates = mt.copy_rates_from_pos(symbol, timeframe, 0, num_candles)
    
    if rates is None:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {timeframe_name} ‡πÑ‡∏î‡πâ, error code = {mt.last_error()}")
        return False
    
    # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô DataFrame
    df = pd.DataFrame(rates)
    
    # ‡πÅ‡∏õ‡∏•‡∏á timestamp ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    df['time'] = pd.to_datetime(df['time'], unit='s')
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå
    df['symbol'] = symbol
    df['timeframe'] = timeframe_name
    
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    df['body'] = abs(df['close'] - df['open'])  # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô
    df['upper_shadow'] = df['high'] - df[['open', 'close']].max(axis=1)  # ‡πÑ‡∏™‡πâ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ö‡∏ô
    df['lower_shadow'] = df[['open', 'close']].min(axis=1) - df['low']  # ‡πÑ‡∏™‡πâ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏•‡πà‡∏≤‡∏á
    df['is_bullish'] = df['close'] > df['open']  # ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    df['change_percent'] = ((df['close'] - df['open']) / df['open']) * 100  # ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    
    # ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà
    columns_order = ['time', 'symbol', 'timeframe', 'open', 'high', 'low', 'close', 
                     'tick_volume', 'spread', 'real_volume', 'body', 'upper_shadow', 
                     'lower_shadow', 'is_bullish', 'change_percent']
    df = df[columns_order]
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏° timestamp
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"{symbol}_{timeframe_name}_1000candles_{timestamp}.csv"
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô CSV
    df.to_csv(filename, index=False, encoding='utf-8-sig')  # utf-8-sig ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    
    print(f"\n‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {timeframe_name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß: {filename}")
    print(f"üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô: {len(df)} ‡πÅ‡∏ó‡πà‡∏á")
    print(f"üìÖ ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: {df['time'].min()} ‡∏ñ‡∏∂‡∏á {df['time'].max()}")
    print(f"üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ {timeframe_name}:")
    print(f"  - ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î: {df['low'].min():.5f}")
    print(f"  - ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: {df['high'].max():.5f}")
    print(f"  - ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß: {df['is_bullish'].sum()} ‡πÅ‡∏ó‡πà‡∏á")
    print(f"  - ‡πÅ‡∏ó‡πà‡∏á‡πÅ‡∏î‡∏á: {(~df['is_bullish']).sum()} ‡πÅ‡∏ó‡πà‡∏á")
    
    return df

# ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏•‡∏±‡∏Å
if __name__ == '__main__':
    # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MetaTrader5
    if not mt.initialize(path=path, login=login, server=server, password=pwd):
        print("Initialize() failed, error code =", mt.last_error())
        quit()
    
    print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MetaTrader 5 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    print(f"üìä ‡∏Ñ‡∏π‡πà‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô: {symbol}")
    print("\n" + "="*60)
    print("üì• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 Timeframes (M1, M5, M15, H1, H4)")
    print("üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 1000 ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠ Timeframe")
    print("="*60)
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î timeframes ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á
    timeframes_to_save = [
        (mt.TIMEFRAME_M1, "M1"),
        (mt.TIMEFRAME_M5, "M5"),
        (mt.TIMEFRAME_M15, "M15"),
        (mt.TIMEFRAME_H1, "H1"),
        (mt.TIMEFRAME_H4, "H4")
    ]
    
    # ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    successful_files = []
    failed_files = []
    
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞ timeframe
    for i, (tf, tf_name) in enumerate(timeframes_to_save, 1):
        print(f"\n{'='*60}")
        print(f"üìç [{i}/5] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {tf_name}...")
        print(f"{'='*60}")
        
        result = save_historical_data_to_csv(symbol, tf, tf_name, 1000)
        
        if result is not False:
            successful_files.append(tf_name)
        else:
            failed_files.append(tf_name)
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    print("\n" + "="*60)
    print("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    print("="*60)
    print(f"‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {len(successful_files)} ‡πÑ‡∏ü‡∏•‡πå")
    if successful_files:
        print(f"   - Timeframes: {', '.join(successful_files)}")
    
    if failed_files:
        print(f"‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {len(failed_files)} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"   - Timeframes: {', '.join(failed_files)}")
    
    print(f"\nüìÅ ‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {os.getcwd()}")
    
    # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    mt.shutdown()
    print("\n‚úÖ ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MetaTrader 5 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    print("="*60)